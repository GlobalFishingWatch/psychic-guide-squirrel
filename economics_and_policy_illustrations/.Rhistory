<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< Updated upstream
=======
>>>>>>> Juan
geom_polygon(aes(x = long, y = lat, group = id, fill = effort_per_unit_area),  alpha = .8,data = tidy_effort_all_buffers %>% mutate(id = paste(id,"nm")))+
ylab("latitude")+
xlab("longitude")+
scale_fill_continuous(name ="Effort per unit area \n(Kwh per square mile) \n" )
effort_plot_full_buffers <- ggmap::ggmap(ggmap::get_map(location = c(-174,-4,-172,-4), zoom = 6,  maptype = c("satellite"), source = 'google'))+
geom_polygon(data=fortify(pipa_shp), aes(x=long, y=lat, group=group), color = "red", alpha=0.6)+
geom_polygon(aes(x = long, y = lat, group = id, fill = effort_per_unit_area),  alpha = .8,data = tidy_effort_all_buffers %>% mutate(id = paste(id,"nm")))+
ylab("latitude")+
xlab("longitude")+
scale_fill_continuous(name ="Effort per unit area \n(Kwh per square mile) \n" )
effort_plot_full_buffers
fishing_effort_all_buffers <- lapply(c(1:9), function(i){
buffer_id = c("20", "40", "60","80","100")
effort <- effort_around_pipa[!is.na(over(effort_around_pipa, as(pipa_buffers_spdf[pipa_buffers_spdf@data$id[i],], "SpatialPolygons"))),]
effort_df <- cbind(effort@coords, effort@data) %>%
mutate(id = buffer_id[i])
})
summary_of_fishing_effort_by_buffer <- do.call(rbind,fishing_effort_all_buffers) %>%
group_by(id) %>%
summarise(effort = sum(hours))
tidy_effort_all_buffers <- broom::tidy(pipa_buffers_spdf) %>%
left_join(summary_of_fishing_effort_by_buffer) %>%
left_join(pipa_buffers_spdf@data) %>%
mutate(area_sq_mile = area*3.86*10^-7) %>%
mutate(effort_per_unit_area = effort/(area_sq_mile))
effort_density_plot <- tidy_effort_all_buffers %>%
group_by(id) %>%
summarise(e = mean(effort)/mean(area_sq_mile)) %>%
arrange(desc(e)) %>%
mutate(id = factor(id, levels =  c("20", "40", "60","80","100"))) %>%
ungroup() %>%
ggplot(aes(x = id , y = e))+
geom_point() +
geom_line(aes(group = 1))+
theme_minimal()+
ylab("effort density [hours per square mile]")+
xlab("distance from EEZ border (nautical miles)")
effort_density_plot
effort_plot_full_buffers <- ggmap::ggmap(ggmap::get_map(location = c(-174,-4,-172,-4), zoom = 6,  maptype = c("satellite"), source = 'google'))+
geom_polygon(data=fortify(pipa_shp), aes(x=long, y=lat, group=group), color = "red", alpha=0.6)+
geom_polygon(aes(x = long, y = lat, group = id, fill = effort_per_unit_area),  alpha = .8,data = tidy_effort_all_buffers %>% mutate(id = paste(id,"nm")))+
ylab("latitude")+
xlab("longitude")+
scale_fill_continuous(name ="Effort per unit area \n(Kwh per square mile) \n" )
effort_plot_full_buffers
tiff('results/plots/effort_plot_full_buffers_FP.tiff', height = 12, width = 17, units = 'cm',
compression = "lzw", res = 300)
print(effort_plot_full_buffers)
invisible(dev.off())
fishing_effort_all_buffers <- lapply(c(1:9), function(i){
buffer_id = c("20", "40", "60","80","100")
effort <- effort_around_pipa[!is.na(over(effort_around_pipa, as(pipa_buffers_spdf[pipa_buffers_spdf@data$id[i],], "SpatialPolygons"))),]
effort_df <- cbind(effort@coords, effort@data) %>%
mutate(id = buffer_id[i])
})
shp_path <- paste("~/Box Sync/mpatlas_export_20161128")
mpa_atlas <- rgdal::readOGR(dsn = path.expand(shp_path), layer = "mpatlas_export_20161128")
pipa_shp <- mpa_atlas[mpa_atlas@data$mpa_id == 7705427,]
ggmap::ggmap(ggmap::get_map(location = c(-174,-4,-172,-4), zoom = 6,  maptype = c("satellite"), source = 'google'))+
geom_polygon(data=fortify(pipa_shp), aes(x=long, y=lat, group=group), color = "red", alpha=0.6)
pipa_buffers <- sapply(c(20,40,60,80,100,120,140,160,180), function(i){
rgeos::gBuffer(pipa_shp %>%
spTransform(CRS("+proj=utm +zone=2s +datum=WGS84")), width = 1852*i, byid = FALSE, id = i)
})
## Deletes previous buffers to get only the doughnuts
for (i in length(pipa_buffers):2) {
pipa_buffers[[i]]<-rgeos::gDifference(pipa_buffers[[i]], pipa_buffers[[i-1]], id = pipa_buffers[[i]]@polygons[[1]]@ID)
}
## Deletes the initial EEZ
pipa_buffers[[1]]<-rgeos::gDifference(pipa_buffers[[1]], pipa_shp %>% spTransform(CRS("+proj=utm +zone=2s +datum=WGS84")),id = pipa_buffers[[1]]@polygons[[1]]@ID )
## Transforms the buffers into a Spatial Polygons Dataframe, gives each buffer an ID:distance from the EEZ, and caculates the area of each buffer.
pipa_buffers_spdf <- sapply(1:length(pipa_buffers), function(i){
r <- c("20", "40", "60","80","100","120", "140","160","180")
SpatialPolygonsDataFrame(pipa_buffers[[i]] %>%
spTransform(CRS(sp::proj4string(pipa_shp))), data = data.frame(row.names = r[i],
id = r[i],
area = rgeos::gArea(pipa_buffers[[i]])))
})
## Combines the buffers from a list into a dataframe
pipa_buffers_spdf <- do.call(rbind, pipa_buffers_spdf)
ggmap::ggmap(ggmap::get_map(location = c(-174,-4,-172,-4), zoom = 6,  maptype = c("satellite"), source = 'google'))+
geom_polygon(data=fortify(pipa_shp), aes(x=long, y=lat, group=group), color = "red", alpha=0.6)+
geom_polygon(aes(x = long, y = lat, fill = id),  alpha = .8, data = broom::tidy(pipa_buffers_spdf))
pipa_buffers <- sapply(c(20,40,60,80,100), function(i){
rgeos::gBuffer(pipa_shp %>%
spTransform(CRS("+proj=utm +zone=2s +datum=WGS84")), width = 1852*i, byid = FALSE, id = i)
})
## Deletes previous buffers to get only the doughnuts
for (i in length(pipa_buffers):2) {
pipa_buffers[[i]]<-rgeos::gDifference(pipa_buffers[[i]], pipa_buffers[[i-1]], id = pipa_buffers[[i]]@polygons[[1]]@ID)
}
## Deletes the initial EEZ
pipa_buffers[[1]]<-rgeos::gDifference(pipa_buffers[[1]], pipa_shp %>% spTransform(CRS("+proj=utm +zone=2s +datum=WGS84")),id = pipa_buffers[[1]]@polygons[[1]]@ID )
## Transforms the buffers into a Spatial Polygons Dataframe, gives each buffer an ID:distance from the EEZ, and caculates the area of each buffer.
pipa_buffers_spdf <- sapply(1:length(pipa_buffers), function(i){
r <- c("20", "40", "60","80","100","120", "140","160","180")
SpatialPolygonsDataFrame(pipa_buffers[[i]] %>%
spTransform(CRS(sp::proj4string(pipa_shp))), data = data.frame(row.names = r[i],
id = r[i],
area = rgeos::gArea(pipa_buffers[[i]])))
})
## Combines the buffers from a list into a dataframe
pipa_buffers_spdf <- do.call(rbind, pipa_buffers_spdf)
ggmap::ggmap(ggmap::get_map(location = c(-174,-4,-172,-4), zoom = 6,  maptype = c("satellite"), source = 'google'))+
geom_polygon(data=fortify(pipa_shp), aes(x=long, y=lat, group=group), color = "red", alpha=0.6)+
geom_polygon(aes(x = long, y = lat, fill = id),  alpha = .8, data = broom::tidy(pipa_buffers_spdf))
pipa_buffers <- sapply(c(20,40,60,80,100), function(i){
rgeos::gBuffer(pipa_shp %>%
spTransform(CRS("+proj=utm +zone=2s +datum=WGS84")), width = 1852*i, byid = FALSE, id = i)
})
## Deletes previous buffers to get only the doughnuts
for (i in length(pipa_buffers):2) {
pipa_buffers[[i]]<-rgeos::gDifference(pipa_buffers[[i]], pipa_buffers[[i-1]], id = pipa_buffers[[i]]@polygons[[1]]@ID)
}
## Deletes the initial EEZ
pipa_buffers[[1]]<-rgeos::gDifference(pipa_buffers[[1]], pipa_shp %>% spTransform(CRS("+proj=utm +zone=2s +datum=WGS84")),id = pipa_buffers[[1]]@polygons[[1]]@ID )
## Transforms the buffers into a Spatial Polygons Dataframe, gives each buffer an ID:distance from the EEZ, and caculates the area of each buffer.
pipa_buffers_spdf <- sapply(1:length(pipa_buffers), function(i){
r <- c("20", "40", "60","80","100")
SpatialPolygonsDataFrame(pipa_buffers[[i]] %>%
spTransform(CRS(sp::proj4string(pipa_shp))), data = data.frame(row.names = r[i],
id = r[i],
area = rgeos::gArea(pipa_buffers[[i]])))
})
## Combines the buffers from a list into a dataframe
pipa_buffers_spdf <- do.call(rbind, pipa_buffers_spdf)
ggmap::ggmap(ggmap::get_map(location = c(-174,-4,-172,-4), zoom = 6,  maptype = c("satellite"), source = 'google'))+
geom_polygon(data=fortify(pipa_shp), aes(x=long, y=lat, group=group), color = "red", alpha=0.6)+
geom_polygon(aes(x = long, y = lat, fill = id),  alpha = .8, data = broom::tidy(pipa_buffers_spdf))
sql <- "SELECT
day(timestamp) day,
round(lon,3) lon,
round(lat,3) lat,
sum(engine_power*hours) hours,
FROM
[clean_effort.clean_effort_with_VC_and_FAO_2015]
where
lon > -179 and lon <-167 and lat >-9 and lat <  1
and measure_new_score >= 0.5
group by
day, lon, lat"
effort_around_pipa <- query_exec(sql,"high-seas", max_pages = Inf)
coordinates(effort_around_pipa) <- c("lon", "lat")
sp::proj4string(effort_around_pipa) <- sp::proj4string(pipa_shp)
fishing_effort_all_buffers <- lapply(c(1:9), function(i){
buffer_id = c("20", "40", "60","80","100")
effort <- effort_around_pipa[!is.na(over(effort_around_pipa, as(pipa_buffers_spdf[pipa_buffers_spdf@data$id[i],], "SpatialPolygons"))),]
effort_df <- cbind(effort@coords, effort@data) %>%
mutate(id = buffer_id[i])
})
fishing_effort_all_buffers <- lapply(c(1:5), function(i){
buffer_id = c("20", "40", "60","80","100")
effort <- effort_around_pipa[!is.na(over(effort_around_pipa, as(pipa_buffers_spdf[pipa_buffers_spdf@data$id[i],], "SpatialPolygons"))),]
effort_df <- cbind(effort@coords, effort@data) %>%
mutate(id = buffer_id[i])
})
summary_of_fishing_effort_by_buffer <- do.call(rbind,fishing_effort_all_buffers) %>%
group_by(id) %>%
summarise(effort = sum(hours))
tidy_effort_all_buffers <- broom::tidy(pipa_buffers_spdf) %>%
left_join(summary_of_fishing_effort_by_buffer) %>%
left_join(pipa_buffers_spdf@data) %>%
mutate(area_sq_mile = area*3.86*10^-7) %>%
mutate(effort_per_unit_area = effort/(area_sq_mile))
effort_density_plot <- tidy_effort_all_buffers %>%
group_by(id) %>%
summarise(e = mean(effort)/mean(area_sq_mile)) %>%
arrange(desc(e)) %>%
mutate(id = factor(id, levels =  c("20", "40", "60","80","100"))) %>%
ungroup() %>%
ggplot(aes(x = id , y = e))+
geom_point() +
geom_line(aes(group = 1))+
theme_minimal()+
ylab("effort density [hours per square mile]")+
xlab("distance from EEZ border (nautical miles)")
effort_density_plot
effort_plot_full_buffers <- ggmap::ggmap(ggmap::get_map(location = c(-174,-4,-172,-4), zoom = 6,  maptype = c("satellite"), source = 'google'))+
geom_polygon(data=fortify(pipa_shp), aes(x=long, y=lat, group=group), color = "red", alpha=0.6)+
geom_polygon(aes(x = long, y = lat, group = id, fill = effort_per_unit_area),  alpha = .8,data = tidy_effort_all_buffers %>% mutate(id = paste(id,"nm")))+
ylab("latitude")+
xlab("longitude")+
scale_fill_continuous(name ="Effort per unit area \n(Kwh per square mile) \n" )
effort_plot_full_buffers
summary_of_fishing_effort_by_buffer
effort_plot_full_buffers
View(tidy_effort_all_buffers)
broom::tidy(pipa_buffers_spdf)
pipa_buffers_spdf@data
pipa_line <- rgeos::gBuffer(pipa_shp %>%
spTransform(CRS("+proj=utm +zone=2s +datum=WGS84")), width = 1852*20, byid = FALSE, id = i)
pipa_line <-rgeos::gDifference(pipa_line, pipa_shp %>% spTransform(CRS("+proj=utm +zone=2s +datum=WGS84")),id = pipa_line@polygons[[1]]@ID )
fishing_effort_on_the_line <- lapply(c(1:1), function(i){
buffer_id = c("20")
effort <- effort_around_pipa[!is.na(over(effort_around_pipa, as(pipa_line[pipa_line@data$id[i],], "SpatialPolygons"))),]
effort_df <- cbind(effort@coords, effort@data) %>%
mutate(id = buffer_id[i])
})
pipa_line_spdf <- SpatialPolygonsDataFrame(pipa_buffers[[i]] %>%
spTransform(CRS(sp::proj4string(pipa_shp))), data = data.frame(row.names = r[20],
id = r[20],
area = rgeos::gArea(pipa_line)))
pipa_line_spdf <- SpatialPolygonsDataFrame(pipa_line %>%
spTransform(CRS(sp::proj4string(pipa_shp))), data = data.frame(row.names = "20",
id = "20",
area = rgeos::gArea(pipa_line)))
pipa_line_spdf <- SpatialPolygonsDataFrame(pipa_line %>%
spTransform(CRS(sp::proj4string(pipa_shp))), data = data.frame(area = rgeos::gArea(pipa_line)))
length(pipa_line)
SpatialPolygonsDataFrame(pipa_line %>%
spTransform(CRS(sp::proj4string(pipa_shp))), data = data.frame(row.names = r[i],
id = r[i],
area = rgeos::gArea(pipa_line[[i]])))
pipa_line_spdf <- sapply(1:length(pipa_line), function(i){
r <- c("20")
SpatialPolygonsDataFrame(pipa_line %>%
spTransform(CRS(sp::proj4string(pipa_shp))), data = data.frame(row.names = r[i],
id = r[i],
area = rgeos::gArea(pipa_line[[i]])))
})
pipa_line_spdf <- sapply(1:length(pipa_line), function(i){
r <- c("20")
SpatialPolygonsDataFrame(pipa_line %>%
spTransform(CRS(sp::proj4string(pipa_shp))), data = data.frame(row.names = r[i],
id = r[i],
area = rgeos::gArea(pipa_line)))
})
pipa_line_spdf <- sapply(1:length(pipa_line), function(i){
r <- c("20")
SpatialPolygonsDataFrame(pipa_line %>%
spTransform(CRS(sp::proj4string(pipa_shp))), data = data.frame(row.names = r[i],
id = r[i]
))
})
pipa_line <- rgeos::gBuffer(pipa_shp %>%
spTransform(CRS("+proj=utm +zone=2s +datum=WGS84")), width = 1852*20, byid = FALSE, id = 20)
pipa_line <-rgeos::gDifference(pipa_line, pipa_shp %>% spTransform(CRS("+proj=utm +zone=2s +datum=WGS84")),id = pipa_line@polygons[[1]]@ID )
pipa_line_spdf <- sapply(1:length(pipa_line), function(i){
r <- c("20")
SpatialPolygonsDataFrame(pipa_line %>%
spTransform(CRS(sp::proj4string(pipa_shp))), data = data.frame(row.names = r[i],
id = r[i]
))
})
pipa_buffers_spdf <- do.call(rbind, pipa_line_spdf)
pipa_line_spdf <- do.call(rbind, pipa_line_spdf)
fishing_effort_on_the_line <- lapply(c(1:1), function(i){
buffer_id = c("20")
effort <- effort_around_pipa[!is.na(over(effort_around_pipa, as(pipa_line_spdf[pipa_line_spdf@data$id[i],], "SpatialPolygons"))),]
effort_df <- cbind(effort@coords, effort@data) %>%
mutate(id = buffer_id[i])
})
t <- fishing_effort_on_the_line %>%
mutate(date = lubridate::d(day))
fishing_effort_on_the_line
t <- fishing_effort_on_the_line %>%
mutate(date = lubridate::day(day))
t <- fishing_effort_on_the_line %>%
select(day)
t <- fishing_effort_on_the_line %>%
as_dat_frame() %>%
select(day)
t <- fishing_effort_on_the_line %>%
as_data_frame() %>%
select(day)
fishing_effort_on_the_line %>%
as_data_frame()
fishing_effort_on_the_line
fishing_effort_on_the_line <-  effort_around_pipa[!is.na(over(effort_around_pipa, as(pipa_line_spdf[pipa_line_spdf@data$id[1],], "SpatialPolygons"))),]
fishing_effort_on_the_line <- cbind(fishing_effort_on_the_line@coords, fishing_effort_on_the_line@data) %>%
mutate(id = buffer_id[i])
fishing_effort_on_the_line <- cbind(fishing_effort_on_the_line@coords, fishing_effort_on_the_line@data) %>%
mutate(id = "20")
t <- fishing_effort_on_the_line %>%
select(day)
t <- fishing_effort_on_the_line %>%
mutate(date = lubridate::day(day))
fishing_effort_on_the_line
t <- fishing_effort_on_the_line %>%
mutate(date = lubridate::d(day))
t <- fishing_effort_on_the_line %>%
mutate(date = lubridate::dayofyear(day))
t <- fishing_effort_on_the_line %>%
group_by(day) %>%
summarise(effort = sum(hours)) %>%
ungroup()
dygraphs::dygraph(xts::xts(t$effort,t$day), main = "Active Chinese vessels inside their own EEZ") %>%
dygraphs::dyRangeSelector(dateWindow = c("2015-01-01", "2015-12-31")) %>%
dySeries(label = "Active vessels", color = "black") %>%
dygraphs::dygraph(xts::xts(t$effort,t$day), main = "Active Chinese vessels inside their own EEZ") %>%
dygraphs::dyRangeSelector(dateWindow = c("2015-01-01", "2015-12-31")) %>%
dySeries(label = "Active vessels", color = "black")
t <- fishing_effort_on_the_line %>%
mutate(day = toDate(day)) %>%
group_by(day) %>%
summarise(effort = sum(hours)) %>%
ungroup()
t <- fishing_effort_on_the_line %>%
mutate(day = ISOdate(day)) %>%
group_by(day) %>%
summarise(effort = sum(hours)) %>%
ungroup()
t <- fishing_effort_on_the_line %>%
mutate(day = as.Date(day, origin = "2015-01-01") %>%
group_by(day) %>%
summarise(effort = sum(hours)) %>%
ungroup()
t <- fishing_effort_on_the_line %>%
mutate(day = as.Date(day, origin = "2015-01-01")) %>%
group_by(day) %>%
summarise(effort = sum(hours)) %>%
ungroup()
dygraphs::dygraph(xts::xts(t$effort,t$day), main = "Active Chinese vessels inside their own EEZ") %>%
dygraphs::dyRangeSelector(dateWindow = c("2015-01-01", "2015-12-31")) %>%
dySeries(label = "Active vessels", color = "black")
dygraphs::dygraph(xts::xts(t$effort,t$day), main = "Active Chinese vessels inside their own EEZ") %>%
dygraphs::dyRangeSelector(dateWindow = c("2015-01-01", "2015-12-31")) %>%
dygraphs::dySeries(label = "Active vessels", color = "black")
View(fishing_effort_on_the_line)
sql <- "SELECT
dayofyear(timestamp) day,
round(lon,3) lon,
round(lat,3) lat,
sum(engine_power*hours) hours,
FROM
[clean_effort.clean_effort_with_VC_and_FAO_2015]
where
lon > -179 and lon <-167 and lat >-9 and lat <  1
and measure_new_score >= 0.5
group by
day, lon, lat"
effort_around_pipa <- query_exec(sql,"high-seas", max_pages = Inf)
coordinates(effort_around_pipa) <- c("lon", "lat")
sp::proj4string(effort_around_pipa) <- sp::proj4string(pipa_shp)
pipa_line <- rgeos::gBuffer(pipa_shp %>%
spTransform(CRS("+proj=utm +zone=2s +datum=WGS84")), width = 1852*20, byid = FALSE, id = 20)
## Deletes the initial EEZ
pipa_line <-rgeos::gDifference(pipa_line, pipa_shp %>% spTransform(CRS("+proj=utm +zone=2s +datum=WGS84")),id = pipa_line@polygons[[1]]@ID )
pipa_line_spdf <- sapply(1:length(pipa_line), function(i){
r <- c("20")
SpatialPolygonsDataFrame(pipa_line %>%
spTransform(CRS(sp::proj4string(pipa_shp))), data = data.frame(row.names = r[i],
id = r[i]
))
})
## Combines the buffers from a list into a dataframe
pipa_line_spdf <- do.call(rbind, pipa_line_spdf)
fishing_effort_on_the_line <- lapply(c(1:1), function(i){
buffer_id = c("20")
effort <- effort_around_pipa[!is.na(over(effort_around_pipa, as(pipa_line_spdf[pipa_line_spdf@data$id[i],], "SpatialPolygons"))),]
effort_df <- cbind(effort@coords, effort@data) %>%
mutate(id = buffer_id[i])
})
fishing_effort_on_the_line <-  effort_around_pipa[!is.na(over(effort_around_pipa, as(pipa_line_spdf[pipa_line_spdf@data$id[1],], "SpatialPolygons"))),]
fishing_effort_on_the_line <- cbind(fishing_effort_on_the_line@coords, fishing_effort_on_the_line@data) %>%
mutate(id = "20")
t <- fishing_effort_on_the_line %>%
mutate(day = as.Date(day, origin = "2015-01-01")) %>%
group_by(day) %>%
summarise(effort = sum(hours)) %>%
ungroup()
dygraphs::dygraph(xts::xts(t$effort,t$day), main = "Active Chinese vessels inside their own EEZ") %>%
dygraphs::dyRangeSelector(dateWindow = c("2015-01-01", "2015-12-31")) %>%
dygraphs::dySeries(label = "Active vessels", color = "black")
dygraphs::dygraph(xts::xts(t$effort,t$day), main = "Effort in PIPA 20nm buffer") %>%
dygraphs::dyRangeSelector(dateWindow = c("2015-01-01", "2015-12-31")) %>%
dygraphs::dySeries(label = "fishing hours", color = "black")
sql <- "SELECT
date(timestamp) date,
round(lon,3) lon,
round(lat,3) lat,
sum(hours) hours,
FROM
[fao.all_years_clean_effort_with_FAO_regions]
where
lon > -179 and lon <-167 and lat >-9 and lat <  1
and measure_new_score >= 0.5
group by
date, lon, latt"
effort_around_pipa <- query_exec(sql,"ucsb-gfw", max_pages = Inf)
sql <- "SELECT
date(timestamp) date,
round(lon,3) lon,
round(lat,3) lat,
sum(hours) hours,
FROM
[fao.all_years_clean_effort_with_FAO_regions]
where
lon > -179 and lon <-167 and lat >-9 and lat <  1
and measure_new_score >= 0.5
group by
date, lon, lat"
effort_around_pipa <- query_exec(sql,"ucsb-gfw", max_pages = Inf)
coordinates(effort_around_pipa) <- c("lon", "lat")
sp::proj4string(effort_around_pipa) <- sp::proj4string(pipa_shp)
pipa_line <- rgeos::gBuffer(pipa_shp %>%
spTransform(CRS("+proj=utm +zone=2s +datum=WGS84")), width = 1852*20, byid = FALSE, id = 20)
## Deletes the initial EEZ
pipa_line <-rgeos::gDifference(pipa_line, pipa_shp %>% spTransform(CRS("+proj=utm +zone=2s +datum=WGS84")),id = pipa_line@polygons[[1]]@ID )
pipa_line_spdf <- sapply(1:length(pipa_line), function(i){
r <- c("20")
SpatialPolygonsDataFrame(pipa_line %>%
spTransform(CRS(sp::proj4string(pipa_shp))), data = data.frame(row.names = r[i],
id = r[i]
))
})
## Combines the buffers from a list into a dataframe
pipa_line_spdf <- do.call(rbind, pipa_line_spdf)
fishing_effort_on_the_line <- lapply(c(1:1), function(i){
buffer_id = c("20")
effort <- effort_around_pipa[!is.na(over(effort_around_pipa, as(pipa_line_spdf[pipa_line_spdf@data$id[i],], "SpatialPolygons"))),]
effort_df <- cbind(effort@coords, effort@data) %>%
mutate(id = buffer_id[i])
})
fishing_effort_on_the_line <-  effort_around_pipa[!is.na(over(effort_around_pipa, as(pipa_line_spdf[pipa_line_spdf@data$id[1],], "SpatialPolygons"))),]
fishing_effort_on_the_line <- cbind(fishing_effort_on_the_line@coords, fishing_effort_on_the_line@data) %>%
mutate(id = "20")
View(fishing_effort_on_the_line)
t <- fishing_effort_on_the_line %>%
mutate(date = ymd(date)) %>%
group_by(date) %>%
summarise(effort = sum(hours)) %>%
ungroup()
t <- fishing_effort_on_the_line %>%
mutate(date = lubridate::ymd(date)) %>%
group_by(date) %>%
summarise(effort = sum(hours)) %>%
ungroup()
dygraphs::dygraph(xts::xts(t$effort,t$date), main = "Effort in PIPA 20nm buffer") %>%
dygraphs::dyRangeSelector(dateWindow = c("2012-01-01", "2015-12-31")) %>%
dygraphs::dySeries(label = "fishing hours", color = "black")
dygraphs::dygraph(xts::xts(t$effort,t$date), main = "Effort in PIPA 20nm buffer") %>%
dygraphs::dyRangeSelector(dateWindow = c("2012-01-01", "2015-12-31")) %>%
dygraphs::dySeries(label = "fishing hours", color = "black") %>%
dygraphs::dyRoller(rollPeriod = 3)
sql <- "SELECT
date(timestamp) date,
round(lon,3) lon,
round(lat,3) lat,
sum(hours) hours,
FROM
[fao.all_years_clean_effort_with_FAO_regions]
where
lon > -179 and lon <-167 and lat >-9 and lat <  1
and measure_new_score >= 0.5
group by
date, lon, lat"
effort_around_pipa <- query_exec(sql,"ucsb-gfw", max_pages = Inf)
coordinates(effort_around_pipa) <- c("lon", "lat")
sp::proj4string(effort_around_pipa) <- sp::proj4string(pipa_shp)
pipa_line <- rgeos::gBuffer(pipa_shp %>%
spTransform(CRS("+proj=utm +zone=2s +datum=WGS84")), width = 1852*20, byid = FALSE, id = 20)
pipa_line <-rgeos::gDifference(pipa_line, pipa_shp %>% spTransform(CRS("+proj=utm +zone=2s +datum=WGS84")),id = pipa_line@polygons[[1]]@ID )
pipa_line_spdf <- SpatialPolygonsDataFrame(pipa_line %>%
spTransform(CRS(sp::proj4string(pipa_shp))), data = data.frame(row.names = "20",
id = "20"
))
fishing_effort_on_the_line <-  effort_around_pipa[!is.na(over(effort_around_pipa, as(pipa_line_spdf[pipa_line_spdf@data$id[1],], "SpatialPolygons"))),]
fishing_effort_on_the_line <- cbind(fishing_effort_on_the_line@coords, fishing_effort_on_the_line@data) %>%
mutate(id = "20")
t <- fishing_effort_on_the_line %>%
mutate(date = lubridate::ymd(date)) %>%
group_by(date) %>%
summarise(effort = sum(hours)) %>%
ungroup()
dygraphs::dygraph(xts::xts(t$effort,t$date), main = "Effort in PIPA 20nm buffer") %>%
dygraphs::dyRangeSelector(dateWindow = c("2012-01-01", "2015-12-31")) %>%
dygraphs::dySeries(label = "fishing hours", color = "black") %>%
dygraphs::dyRoller(rollPeriod = 3)
dygraphs::dygraph(xts::xts(t$effort,t$date), main = "Effort in PIPA 20nm buffer") %>%
dygraphs::dyRangeSelector(dateWindow = c("2012-01-01", "2015-12-31")) %>%
dygraphs::dySeries(label = "fishing hours", color = "black") %>%
dygraphs::dyRoller(rollPeriod = 7)
sql <- "
SELECT
date(timestamp) date,
round(lon,3) lon,
round(lat,3) lat,
sum(hours) hours,
FROM
[fao.all_years_clean_effort_with_FAO_regions]
where
lon > -179 and lon <-167 and lat >-9 and lat <  1
group by
date, lon, lat"
effort_around_pipa <- query_exec(sql,"ucsb-gfw", max_pages = Inf)
coordinates(effort_around_pipa) <- c("lon", "lat")
sp::proj4string(effort_around_pipa) <- sp::proj4string(pipa_shp)
pipa_line <- rgeos::gBuffer(pipa_shp %>%
spTransform(CRS("+proj=utm +zone=2s +datum=WGS84")), width = 1852*20, byid = FALSE, id = 20)
## Deletes the initial EEZ
pipa_line <-rgeos::gDifference(pipa_line, pipa_shp %>% spTransform(CRS("+proj=utm +zone=2s +datum=WGS84")),id = pipa_line@polygons[[1]]@ID )
pipa_line_spdf <- SpatialPolygonsDataFrame(pipa_line %>%
spTransform(CRS(sp::proj4string(pipa_shp))), data = data.frame(row.names = "20",
id = "20"
))
fishing_effort_on_the_line <-  effort_around_pipa[!is.na(over(effort_around_pipa, as(pipa_line_spdf[pipa_line_spdf@data$id[1],], "SpatialPolygons"))),]
fishing_effort_on_the_line <- cbind(fishing_effort_on_the_line@coords, fishing_effort_on_the_line@data) %>%
mutate(id = "20")
t <- fishing_effort_on_the_line %>%
mutate(date = lubridate::ymd(date)) %>%
group_by(date) %>%
summarise(effort = sum(hours)) %>%
ungroup()
dygraphs::dygraph(xts::xts(t$effort,t$date), main = "Effort in PIPA 20nm buffer") %>%
dygraphs::dyRangeSelector(dateWindow = c("2012-01-01", "2015-12-31")) %>%
dygraphs::dySeries(label = "fishing hours", color = "black") %>%
dygraphs::dyRoller(rollPeriod = 3)
year_month <- seq(as.numeric(substr(year,3,4))*100+1,as.numeric(substr(year,3,4))*100+12,by=1)
year <- 2012
year_month <- seq(as.numeric(substr(year,3,4))*100+1,as.numeric(substr(year,3,4))*100+12,by=1)
year_month
<<<<<<< HEAD
=======
geom_line(aes(x= fuel_price, y = log(distance_hours/vessels), color = country_name, group = country_name, key = country_name))+
guides(color = FALSE, group = FALSE)+
theme_minimal())
library(docxtractr)
t <- lapply(c(1:6), function(x) read_docx(paste("/Users/JuanMayorga/Box Sync/high_seas_profits/literature/supp_materials_sumalia_2012/Table_S",x,".docx", sep = "")))
t <- lapply(c(1:6), function(x) docx_extract_all_tbls(t[[x]], guess_header = TRUE)[[1]])
t <- lapply(t, setNames, nm = c("Country", "Landings", "Landed Value", "Variable Cost", "Subsidies"))
t <- lapply(c(1:6), function(x) t[[x]][-c(1,2), ] )
subsidies_by_country <- do.call("rbind", t) %>%
mutate_at(vars(-Country), funs(as.numeric(gsub(",", "", .)))) %>%
filter(Country != "Total") %>%
arrange(Country)
View(subsidies_by_country)
subsidies_by_country <- do.call("rbind", t) %>%
mutate_at(vars(-Country), funs(as.numeric(gsub(",", "", .)))) %>%
filter(Country != "Total") %>%
arrange(Country) %>%
mutate(p = (`Landed Value`-`Variable Cost`)/`Subsidies`)
subsidies_by_country <- do.call("rbind", t) %>%
mutate_at(vars(-Country), funs(as.numeric(gsub(",", "", .)))) %>%
filter(Country != "Total") %>%
arrange(Country) %>%
mutate(p = abs(`Landed Value`-`Variable Cost`)/`Subsidies`)
View(subsidies_by_country)
subsidies_by_country <- do.call("rbind", t) %>%
mutate_at(vars(-Country), funs(as.numeric(gsub(",", "", .)))) %>%
filter(Country != "Total") %>%
arrange(Country) %>%
mutate(p = `Subsidies`/abs(`Landed Value`-`Variable Cost`))
View(subsidies_by_country)
subsidies_by_country <- do.call("rbind", t) %>%
mutate_at(vars(-Country), funs(as.numeric(gsub(",", "", .)))) %>%
filter(Country != "Total") %>%
arrange(Country) %>%
mutate(relative_subsidies = `Subsidies`/abs(`Landed Value`-`Variable Cost`))
subsidies_by_country <- do.call("rbind", t) %>%
mutate_at(vars(-Country), funs(as.numeric(gsub(",", "", .)))) %>%
filter(Country != "Total") %>%
arrange(Country) %>%
mutate(Relative_subsidies = `Subsidies`/abs(`Landed Value`-`Variable Cost`))
consistently_active_vessels <- consistently_active_vessels %>%
left_join(subsidies_by_country %>% select(Country, Relative_subsidies))
consistently_active_vessels <- consistently_active_vessels %>%
left_join(subsidies_by_country %>% select(country = Country, Relative_subsidies))
consistently_active_vessels <- consistently_active_vessels %>%
left_join(subsidies_by_country %>% select(country = Country, Relative_subsidies), by = "country")
subsidies_by_country <- do.call("rbind", t) %>%
mutate_at(vars(-Country), funs(as.numeric(gsub(",", "", .)))) %>%
filter(Country != "Total") %>%
arrange(Country) %>%
mutate(Relative_subsidies = `Subsidies`/abs(`Landed Value`-`Variable Cost`)) %>%
rename_vars(country = Country)
subsidies_by_country <- do.call("rbind", t) %>%
mutate_at(vars(-Country), funs(as.numeric(gsub(",", "", .)))) %>%
filter(Country != "Total") %>%
arrange(Country) %>%
mutate(Relative_subsidies = `Subsidies`/abs(`Landed Value`-`Variable Cost`)) %>%
rename_vars(Country = country)
subsidies_by_country <- do.call("rbind", t) %>%
mutate_at(vars(-Country), funs(as.numeric(gsub(",", "", .)))) %>%
filter(Country != "Total") %>%
arrange(Country) %>%
mutate(Relative_subsidies = `Subsidies`/abs(`Landed Value`-`Variable Cost`)) %>%
rename_vars(country = "Country")
subsidies_by_country <- do.call("rbind", t) %>%
mutate_at(vars(-Country), funs(as.numeric(gsub(",", "", .)))) %>%
filter(Country != "Total") %>%
arrange(Country) %>%
mutate(Relative_subsidies = `Subsidies`/abs(`Landed Value`-`Variable Cost`)) %>%
rename_vars("country" = "Country")
rename_vars(names(subsidies_by_country), country = Country)
rename_vars(names(subsidies_by_country), country = Country)
rename_vars(names(subsidies_by_country), Country =country)
rename_vars(names(subsidies_by_country), Country = country)
a <- rename_vars(names(subsidies_by_country), country = Country)
subsidies_by_country <- do.call("rbind", t) %>%
mutate_at(vars(-Country), funs(as.numeric(gsub(",", "", .)))) %>%
filter(Country != "Total") %>%
arrange(Country) %>%
mutate(Relative_subsidies = `Subsidies`/abs(`Landed Value`-`Variable Cost`)) %>%
rename(c("country"="Country"))
subsidies_by_country <- do.call("rbind", t) %>%
mutate_at(vars(-Country), funs(as.numeric(gsub(",", "", .)))) %>%
filter(Country != "Total") %>%
arrange(Country) %>%
mutate(Relative_subsidies = `Subsidies`/abs(`Landed Value`-`Variable Cost`)) %>%
rename(petal_length = Country)
library(docxtractr)
t <- lapply(c(1:6), function(x) read_docx(paste("/Users/JuanMayorga/Box Sync/high_seas_profits/literature/supp_materials_sumalia_2012/Table_S",x,".docx", sep = "")))
t <- lapply(c(1:6), function(x) docx_extract_all_tbls(t[[x]], guess_header = TRUE)[[1]])
t <- lapply(t, setNames, nm = c("Country", "Landings", "Landed Value", "Variable Cost", "Subsidies"))
t <- lapply(c(1:6), function(x) t[[x]][-c(1,2), ] )
subsidies_by_country <- do.call("rbind", t) %>%
mutate_at(vars(-Country), funs(as.numeric(gsub(",", "", .)))) %>%
filter(Country != "Total") %>%
arrange(Country) %>%
mutate(Relative_subsidies = `Subsidies`/abs(`Landed Value`-`Variable Cost`)) %>%
rename(petal_length = Country)
=======
left_join(fits %>%
tidy(fit) %>%
filter(term == "fuel_price") %>%
select(country_name, slope = estimate)) %>%
ggplot()+
geom_density(aes(x = slope)))
fits <- consistently_active_vessels %>%
filter(year!= 2012 & year != 2016 & !is.na(country_name) & !is.na(Relative_subsidies)) %>%
group_by(country_name) %>%
do(fit = lm(hours ~ fuel_price , data = .))
plotly::ggplotly(consistently_active_vessels %>%
filter(year!= 2012 & year != 2016 & !is.na(country_name) & !is.na(Relative_subsidies) & country_name != "Nicaragua") %>%
group_by(country_name) %>%
summarise(subsidies = mean(Relative_subsidies)) %>%
left_join(fits %>%
tidy(fit) %>%
filter(term == "fuel_price") %>%
select(country_name, slope = estimate)) %>%
ggplot()+
geom_point(aes(x = subsidies, y = slope, key = country_name)))
plotly::ggplotly(consistently_active_vessels %>%
filter(year!= 2012 & year != 2016 & !is.na(country_name) & !is.na(Relative_subsidies) & country_name != "Nicaragua") %>%
group_by(country_name) %>%
summarise(subsidies = mean(Subsidies)) %>%
left_join(fits %>%
tidy(fit) %>%
filter(term == "fuel_price") %>%
select(country_name, slope = estimate)) %>%
ggplot()+
geom_point(aes(x = subsidies, y = slope, key = country_name)))
consistently_active_vessels
consistently_active_vessels <- active_2016 %>%
inner_join(active_2014_2015, by = "mmsi") %>%
inner_join(active_2012_2013, by = "mmsi") %>%
as_data_frame()
consistently_active_vessels <- consistently_active_vessels %>%
gather(key, value, -mmsi) %>%
separate(key,c("measure", "year"), sep="_") %>%
spread(measure, value)
consistently_active_vessels <- consistently_active_vessels %>%
mutate(code = ifelse(nchar(mmsi) == 9,as.numeric(substr(mmsi,1,3)),0)) %>%
left_join(country_codes %>% select(code, country_name), by = "code") %>%
select(-code)
plotly::ggplotly(
consistently_active_vessels %>%
filter(year != 2016 & year != 2012) %>%
group_by(year, country_name) %>%
summarize(distancehours = sum(distancehours, na.rm = T),
vessels = n_distinct(mmsi)) %>%
ggplot()+
geom_line(aes(x= year, y = distancehours, color = country_name, group = country_name, key = country_name))+
guides(color = FALSE, group = FALSE)+
theme_minimal())
fuel_prices <- data_frame(year = c("2012","2013","2014","2015"),
fuel_price = c(973,934,875,547))
consistently_active_vessels <- consistently_active_vessels %>%
left_join(fuel_prices)
plotly::ggplotly(
consistently_active_vessels %>%
filter(year != 2016 & year != 2012) %>%
group_by(year, country_name) %>%
#filter(country_name %in% c("China", "Spain", "Taiwan", "Japan", "France", "United States", "South Korea", "Norway","Iceland", "Argentina")) %>%
summarize(distance_hours = sum(distancehours, na.rm = TRUE),
fuel_price = mean(fuel_price),
vessels = n_distinct(mmsi)) %>%
ggplot()+
geom_line(aes(x= fuel_price, y = (distance_hours), color = country_name, group = country_name, key = country_name))+
guides(color = FALSE, group = FALSE)+
theme_minimal())
>>>>>>> c08675c3f5eb2b6241db03a43ac20ca7f373bb3e
library(docxtractr)
t <- lapply(c(1:6), function(x) read_docx(paste("/Users/JuanMayorga/Box Sync/high_seas_profits/literature/supp_materials_sumalia_2012/Table_S",x,".docx", sep = "")))
t <- lapply(c(1:6), function(x) docx_extract_all_tbls(t[[x]], guess_header = TRUE)[[1]])
t <- lapply(t, setNames, nm = c("Country", "Landings", "Landed Value", "Variable Cost", "Subsidies"))
t <- lapply(c(1:6), function(x) t[[x]][-c(1,2), ] )
subsidies_by_country <- do.call("rbind", t) %>%
mutate_at(vars(-Country), funs(as.numeric(gsub(",", "", .)))) %>%
filter(Country != "Total") %>%
arrange(Country) %>%
mutate(Relative_subsidies = `Subsidies`/abs(`Landed Value`-`Variable Cost`)) %>%
<<<<<<< HEAD
rename(country = Country)
consistently_active_vessels <- consistently_active_vessels %>%
left_join(subsidies_by_country %>% select(country = Country, Relative_subsidies), by = "country")
consistently_active_vessels <- consistently_active_vessels %>%
left_join(subsidies_by_country %>% select(country, Relative_subsidies), by = "country")
consistently_active_vessels <- consistently_active_vessels %>%
filter(year != 2016 & year != 2012) %>%
rowwise() %>%
mutate(code = ifelse(nchar(mmsi) == 9,as.numeric(substr(mmsi,1,3)),0)) %>%
left_join(country_codes %>% select(code, country_name), by = "code") %>%
select(-code)
library(docxtractr)
t <- lapply(c(1:6), function(x) read_docx(paste("/Users/JuanMayorga/Box Sync/high_seas_profits/literature/supp_materials_sumalia_2012/Table_S",x,".docx", sep = "")))
t <- lapply(c(1:6), function(x) docx_extract_all_tbls(t[[x]], guess_header = TRUE)[[1]])
t <- lapply(t, setNames, nm = c("Country", "Landings", "Landed Value", "Variable Cost", "Subsidies"))
t <- lapply(c(1:6), function(x) t[[x]][-c(1,2), ] )
subsidies_by_country <- do.call("rbind", t) %>%
mutate_at(vars(-Country), funs(as.numeric(gsub(",", "", .)))) %>%
filter(Country != "Total") %>%
arrange(Country) %>%
mutate(Relative_subsidies = `Subsidies`/abs(`Landed Value`-`Variable Cost`)) %>%
rename(country_name = Country)
consistently_active_vessels <- consistently_active_vessels %>%
left_join(subsidies_by_country %>% select(country_name, Relative_subsidies), by = "country")
consistently_active_vessels <- active_2016 %>%
inner_join(active_2014_2015, by = "mmsi") %>%
inner_join(active_2012_2013, by = "mmsi") %>%
select(mmsi,`2012` = hours_distance_2012, `2013` = hours_distance_2013, `2014` = hours_distance_2014, `2015` = hours_distance_2015, `2016` = hours_distance_2016) %>%
gather(year, distance_hours, - mmsi)
consistently_active_vessels %>%
filter(year != 2016 & year != 2012) %>%
group_by(year) %>%
summarize(distance_hours = sum(distance_hours)) %>%
ggplot()+
geom_point(aes(x= year, y = distance_hours))
consistently_active_vessels <- consistently_active_vessels %>%
filter(year != 2016 & year != 2012) %>%
rowwise() %>%
mutate(code = ifelse(nchar(mmsi) == 9,as.numeric(substr(mmsi,1,3)),0)) %>%
left_join(country_codes %>% select(code, country_name), by = "code") %>%
select(-code)
plotly::ggplotly(consistently_active_vessels %>%
group_by(year, country_name) %>%
filter(country_name %in% c("China", "Spain", "Taiwan", "Japan", "France", "United States", "South Korea", "Norway","Iceland")) %>%
summarize(distance_hours = sum(distance_hours),
vessels = n_distinct(mmsi)) %>%
ggplot()+
geom_line(aes(x= year, y = distance_hours, color = country_name, group = country_name, key = country_name))+
=======
rename(country_name = Country) %>%
mutate(country_name = replace(country_name, country_name == "USA", "United States"),
country_name = replace(country_name, country_name == "China Main", "China"),
country_name = replace(country_name, country_name == "UK", "United Kingdom"),
country_name = replace(country_name, country_name == "Russian Fed", "Russia"),
country_name = replace(country_name, country_name == "Korea Rep", "South Korea"))
subsidies_by_country %>%
filter(Relative_subsidies <= 1.5) %>%
top_n(30, `Landed Value`) %>%
ggplot()+
geom_bar(aes(x = forcats::fct_reorder(country_name, Relative_subsidies), y = Relative_subsidies), stat = 'identity')+
coord_flip()
consistently_active_vessels <- consistently_active_vessels %>%
left_join(subsidies_by_country %>%
select(country_name, total_subsidies, relative_subsidies))
consistently_active_vessels <- consistently_active_vessels %>%
left_join(subsidies_by_country %>%
select(country_name, total_subsidies = Subsidies, relative_subsidies))
consistently_active_vessels <- consistently_active_vessels %>%
left_join(subsidies_by_country %>%
select(country_name, total_subsidies = Subsidies, relative_subsidies = Relative_subsidies))
subsidies_by_country %>%
anti_join(consistently_active_vessels) %>%
arrange(desc(Landings))
fits <- consistently_active_vessels %>%
filter(year!= 2012 & year != 2016 & !is.na(country_name) & !is.na(relative_subsidies)) %>%
group_by(country_name) %>%
do(fit = lm(hours ~ fuel_price , data = .))
plotly::ggplotly(consistently_active_vessels %>%
filter(year!= 2012 & year != 2016 & !is.na(country_name) & !is.na(relative_subsidies) & country_name != "Nicaragua") %>%
group_by(country_name) %>%
summarise(subsidies = mean(Subsidies)) %>%
left_join(fits %>%
tidy(fit) %>%
filter(term == "fuel_price") %>%
select(country_name, slope = estimate)) %>%
ggplot()+
geom_point(aes(x = subsidies, y = slope, key = country_name)))
plotly::ggplotly(consistently_active_vessels %>%
filter(year!= 2012 & year != 2016 & !is.na(country_name) & !is.na(relative_subsidies) & country_name != "Nicaragua") %>%
group_by(country_name) %>%
summarise(subsidies = mean(total_subsidies)) %>%
left_join(fits %>%
tidy(fit) %>%
filter(term == "fuel_price") %>%
select(country_name, slope = estimate)) %>%
ggplot()+
geom_point(aes(x = subsidies, y = slope, key = country_name)))
library(tidyverse)
library(bigrquery)
library(DBI)
library(rvest)
library(broom)
BQ_connection <-  dbConnect(dbi_driver(), dataset = "", project = "ucsb-gfw")
consistently_active_vessels <- active_2016 %>%
inner_join(active_2014_2015, by = "mmsi") %>%
inner_join(active_2012_2013, by = "mmsi") %>%
as_data_frame()
consistently_active_vessels <- consistently_active_vessels %>%
gather(key, value, -mmsi) %>%
separate(key,c("measure", "year"), sep="_") %>%
spread(measure, value)
View(consistently_active_vessels)
consistently_active_vessels <- consistently_active_vessels %>%
mutate(code = ifelse(nchar(mmsi) == 9,as.numeric(substr(mmsi,1,3)),0)) %>%
left_join(country_codes %>% select(code, country_name), by = "code") %>%
select(-code)
consistently_active_vessels <- consistently_active_vessels %>%
mutate(code = ifelse(nchar(mmsi) == 9,as.numeric(substr(mmsi,1,3)),0)) %>%
left_join(country_codes %>% select(code, country_name), by = "code") %>%
select(-code)
consistently_active_vessels <- active_2016 %>%
inner_join(active_2014_2015, by = "mmsi") %>%
inner_join(active_2012_2013, by = "mmsi") %>%
as_data_frame()
consistently_active_vessels <- consistently_active_vessels %>%
gather(key, value, -mmsi) %>%
separate(key,c("measure", "year"), sep="_") %>%
spread(measure, value)
consistently_active_vessels <- consistently_active_vessels %>%
mutate(code = ifelse(nchar(mmsi) == 9,as.numeric(substr(mmsi,1,3)),0)) %>%
left_join(country_codes %>% select(code, country_name), by = "code") %>%
select(-code)
plotly::ggplotly(
consistently_active_vessels %>%
filter(year != 2016 & year != 2012) %>%
group_by(year, country_name) %>%
summarize(distancehours = sum(distancehours, na.rm = T),
vessels = n_distinct(mmsi)) %>%
ggplot()+
geom_line(aes(x= year, y = distancehours, color = country_name, group = country_name, key = country_name))+
>>>>>>> c08675c3f5eb2b6241db03a43ac20ca7f373bb3e
guides(color = FALSE, group = FALSE)+
theme_minimal())
fuel_prices <- data_frame(year = c("2012","2013","2014","2015"),
fuel_price = c(973,934,875,547))
consistently_active_vessels <- consistently_active_vessels %>%
left_join(fuel_prices)
<<<<<<< HEAD
plotly::ggplotly(consistently_active_vessels %>%
group_by(year, country_name) %>%
filter(country_name %in% c("China", "Spain", "Taiwan", "Japan", "France", "United States", "South Korea", "Norway","Iceland")) %>%
summarize(distance_hours = sum(distance_hours),
fuel_price = mean(fuel_price),
vessels = n_distinct(mmsi)) %>%
ggplot()+
geom_line(aes(x= fuel_price, y = log(distance_hours/vessels), color = country_name, group = country_name, key = country_name))+
guides(color = FALSE, group = FALSE)+
theme_minimal())
=======
View(consistently_active_vessels)
plotly::ggplotly(
consistently_active_vessels %>%
filter(year != 2016 & year != 2012) %>%
group_by(year, country_name) %>%
#filter(country_name %in% c("China", "Spain", "Taiwan", "Japan", "France", "United States", "South Korea", "Norway","Iceland", "Argentina")) %>%
summarize(distance_hours = sum(distancehours, na.rm = TRUE),
fuel_price = mean(fuel_price),
vessels = n_distinct(mmsi)) %>%
ggplot()+
geom_line(aes(x= fuel_price, y = (distance_hours), color = country_name, group = country_name, key = country_name))+
guides(color = FALSE, group = FALSE)+
theme_minimal())
plotly::ggplotly(
consistently_active_vessels %>%
filter(year != 2016 & year != 2012) %>%
group_by(year, country_name) %>%
#filter(country_name %in% c("China", "Spain", "Taiwan", "Japan", "France", "United States", "South Korea", "Norway","Iceland", "Argentina")) %>%
summarize(distance_hours = sum(hours, na.rm = TRUE),
fuel_price = mean(fuel_price),
vessels = n_distinct(mmsi)) %>%
ggplot()+
geom_line(aes(x= fuel_price, y = (distance_hours), color = country_name, group = country_name, key = country_name))+
guides(color = FALSE, group = FALSE)+
theme_minimal())
plotly::ggplotly(
consistently_active_vessels %>%
filter(year != 2016 & year != 2012) %>%
group_by(year, country_name) %>%
#filter(country_name %in% c("China", "Spain", "Taiwan", "Japan", "France", "United States", "South Korea", "Norway","Iceland", "Argentina")) %>%
summarize(distance_hours = sum(distance, na.rm = TRUE),
fuel_price = mean(fuel_price),
vessels = n_distinct(mmsi)) %>%
ggplot()+
geom_line(aes(x= fuel_price, y = (distance_hours), color = country_name, group = country_name, key = country_name))+
guides(color = FALSE, group = FALSE)+
theme_minimal())
plotly::ggplotly(
consistently_active_vessels %>%
filter(year != 2016 & year != 2012) %>%
group_by(year, country_name) %>%
summarize(hours = sum(hours, na.rm = T),
vessels = n_distinct(mmsi)) %>%
ggplot()+
geom_line(aes(x= year, y = hours, color = country_name, group = country_name, key = country_name))+
guides(color = FALSE, group = FALSE)+
theme_minimal())
plotly::ggplotly(
consistently_active_vessels %>%
filter(year != 2016 & year != 2012) %>%
group_by(year, country_name) %>%
#filter(country_name %in% c("China", "Spain", "Taiwan", "Japan", "France", "United States", "South Korea", "Norway","Iceland", "Argentina")) %>%
summarize(distance = sum(distance, na.rm = TRUE),
fuel_price = mean(fuel_price),
vessels = n_distinct(mmsi)) %>%
ggplot()+
geom_line(aes(x= fuel_price, y = (distance), color = country_name, group = country_name, key = country_name))+
guides(color = FALSE, group = FALSE)+
theme_minimal())
plotly::ggplotly(
consistently_active_vessels %>%
filter(year != 2016 & year != 2012) %>%
group_by(year, country_name) %>%
#filter(country_name %in% c("China", "Spain", "Taiwan", "Japan", "France", "United States", "South Korea", "Norway","Iceland", "Argentina")) %>%
summarize(distance = sum(distance, na.rm = TRUE),
fuel_price = mean(fuel_price),
vessels = n_distinct(mmsi)) %>%
ggplot()+
geom_line(aes(x= fuel_price, y = distance, color = country_name, group = country_name, key = country_name))+
guides(color = FALSE, group = FALSE)+
theme_minimal())
plotly::ggplotly(
consistently_active_vessels %>%
filter(year != 2016 & year != 2012) %>%
group_by(year, country_name) %>%
#filter(country_name %in% c("China", "Spain", "Taiwan", "Japan", "France", "United States", "South Korea", "Norway","Iceland", "Argentina")) %>%
summarize(hours = sum(hours, na.rm = TRUE),
fuel_price = mean(fuel_price),
vessels = n_distinct(mmsi)) %>%
ggplot()+
geom_line(aes(x= fuel_price, y = hours, color = country_name, group = country_name, key = country_name))+
guides(color = FALSE, group = FALSE)+
theme_minimal())
plotly::ggplotly(
consistently_active_vessels %>%
filter(year != 2016 & year != 2012) %>%
group_by(year, country_name) %>%
#filter(country_name %in% c("China", "Spain", "Taiwan", "Japan", "France", "United States", "South Korea", "Norway","Iceland", "Argentina")) %>%
summarize(distance_traveled = sum(distance, na.rm = TRUE),
fuel_price = mean(fuel_price),
vessels = n_distinct(mmsi)) %>%
ggplot()+
geom_line(aes(x= fuel_price, y = distance_traveled, color = country_name, group = country_name, key = country_name))+
guides(color = FALSE, group = FALSE)+
theme_minimal())
plotly::ggplotly(
consistently_active_vessels %>%
filter(year != 2016 & year != 2012) %>%
group_by(year, country_name) %>%
#filter(country_name %in% c("China", "Spain", "Taiwan", "Japan", "France", "United States", "South Korea", "Norway","Iceland", "Argentina")) %>%
summarize(distance_hours = sum(distancehours, na.rm = TRUE),
fuel_price = mean(fuel_price),
vessels = n_distinct(mmsi)) %>%
ggplot()+
geom_line(aes(x= fuel_price, y = distance_hours, color = country_name, group = country_name, key = country_name))+
guides(color = FALSE, group = FALSE)+
theme_minimal())
plotly::ggplotly(
consistently_active_vessels %>%
filter(year != 2016 & year != 2012) %>%
group_by(year, country_name) %>%
summarize(hours = sum(distance, na.rm = T),
vessels = n_distinct(mmsi)) %>%
ggplot()+
geom_line(aes(x= year, y = hours, color = country_name, group = country_name, key = country_name))+
guides(color = FALSE, group = FALSE)+
theme_minimal())
plotly::ggplotly(
consistently_active_vessels %>%
filter(year != 2016 & year != 2012) %>%
group_by(year, country_name) %>%
summarize(hours = sum(hours, na.rm = T),
vessels = n_distinct(mmsi)) %>%
ggplot()+
geom_line(aes(x= year, y = hours, color = country_name, group = country_name, key = country_name))+
guides(color = FALSE, group = FALSE)+
theme_minimal())
consistently_active_vessels %>%
group_by(country_name, year) %>%
summarise(hours = sum(hours),
distance = sum(distance),
distancehours = sum(distancehours))
>>>>>>> c08675c3f5eb2b6241db03a43ac20ca7f373bb3e
library(docxtractr)
t <- lapply(c(1:6), function(x) read_docx(paste("/Users/JuanMayorga/Box Sync/high_seas_profits/literature/supp_materials_sumalia_2012/Table_S",x,".docx", sep = "")))
t <- lapply(c(1:6), function(x) docx_extract_all_tbls(t[[x]], guess_header = TRUE)[[1]])
t <- lapply(t, setNames, nm = c("Country", "Landings", "Landed Value", "Variable Cost", "Subsidies"))
t <- lapply(c(1:6), function(x) t[[x]][-c(1,2), ] )
subsidies_by_country <- do.call("rbind", t) %>%
mutate_at(vars(-Country), funs(as.numeric(gsub(",", "", .)))) %>%
filter(Country != "Total") %>%
arrange(Country) %>%
mutate(Relative_subsidies = `Subsidies`/abs(`Landed Value`-`Variable Cost`)) %>%
<<<<<<< HEAD
rename(country_name = Country)
consistently_active_vessels <- consistently_active_vessels %>%
left_join(subsidies_by_country %>% select(country_name, Relative_subsidies), by = "country")
consistently_active_vessels <- consistently_active_vessels %>%
left_join(subsidies_by_country %>% select(country_name, Relative_subsidies))
View(consistently_active_vessels)
View(subsidies_by_country)
subsidies_by_country %>%
ggplot()+
geom_bar(aes(x = country, y = Relative_subsides), stat = 'identity')
subsidies_by_country %>%
ggplot()+
geom_bar(aes(x = country_name, y = Relative_subsides), stat = 'identity')
subsidies_by_country %>%
ggplot()+
geom_bar(aes(x = country_name, y = Relative_subsidies), stat = 'identity')
subsidies_by_country %>%
ggplot()+
geom_bar(aes(x = forcats::fct_reorder(country_name), y = Relative_subsidies), stat = 'identity')
subsidies_by_country %>%
ggplot()+
geom_bar(aes(x = forcats::fct_reorder(country_name, Relative_subsidies), y = Relative_subsidies), stat = 'identity')
subsidies_by_country %>%
ggplot()+
geom_bar(aes(x = forcats::fct_reorder(country_name, Relative_subsidies), y = Relative_subsidies), stat = 'identity')+
coord_flip()
subsidies_by_country %>%
top_n(100,Relative_subsidies) %>%
ggplot()+
geom_bar(aes(x = forcats::fct_reorder(country_name, Relative_subsidies), y = Relative_subsidies), stat = 'identity')+
coord_flip()
subsidies_by_country %>%
top_n(10,Relative_subsidies) %>%
ggplot()+
geom_bar(aes(x = forcats::fct_reorder(country_name, Relative_subsidies), y = Relative_subsidies), stat = 'identity')+
coord_flip()
subsidies_by_country %>%
top_n(50,Relative_subsidies) %>%
ggplot()+
geom_bar(aes(x = forcats::fct_reorder(country_name, Relative_subsidies), y = Relative_subsidies), stat = 'identity')+
coord_flip()
subsidies_by_country %>%
filter(Relative_subsidies <= 2) %>%
top_n(50,Relative_subsidies) %>%
ggplot()+
geom_bar(aes(x = forcats::fct_reorder(country_name, Relative_subsidies), y = Relative_subsidies), stat = 'identity')+
coord_flip()
subsidies_by_country %>%
filter(Relative_subsidies <= 1) %>%
top_n(50,Relative_subsidies) %>%
ggplot()+
geom_bar(aes(x = forcats::fct_reorder(country_name, Relative_subsidies), y = Relative_subsidies), stat = 'identity')+
coord_flip()
subsidies_by_country %>%
filter(Relative_subsidies <= 1) %>%
top_n(50, Landings) %>%
ggplot()+
geom_bar(aes(x = forcats::fct_reorder(country_name, Relative_subsidies), y = Relative_subsidies), stat = 'identity')+
coord_flip()
subsidies_by_country %>%
filter(Relative_subsidies <= 1) %>%
top_n(25, Landings) %>%
ggplot()+
geom_bar(aes(x = forcats::fct_reorder(country_name, Relative_subsidies), y = Relative_subsidies), stat = 'identity')+
coord_flip()
subsidies_by_country %>%
filter(Relative_subsidies <= 1) %>%
top_n(30, Landings) %>%
ggplot()+
geom_bar(aes(x = forcats::fct_reorder(country_name, Relative_subsidies), y = Relative_subsidies), stat = 'identity')+
coord_flip()
subsidies_by_country %>%
filter(Relative_subsidies <= 1) %>%
top_n(30, `Landed Value`) %>%
ggplot()+
geom_bar(aes(x = forcats::fct_reorder(country_name, Relative_subsidies), y = Relative_subsidies), stat = 'identity')+
coord_flip()
View(subsidies_by_country)
subsidies_by_country %>%
filter(Relative_subsidies <= 1.5) %>%
top_n(30, `Landed Value`) %>%
ggplot()+
geom_bar(aes(x = forcats::fct_reorder(country_name, Relative_subsidies), y = Relative_subsidies), stat = 'identity')+
coord_flip()
library(tidyverse)
library(bigrquery)
library(DBI)
library(lubridate)
library(dygraphs)
install.packages("dygraphs")
library(tidyverse)
library(bigrquery)
library(DBI)
library(lubridate)
library(dygraphs)
BQ_connection <-  dbConnect(dbi_driver(), dataset = "", project = "ucsb-gfw")
knitr::opts_chunk$set(connection = "BQ_connection", echo = FALSE, message = FALSE, warning = FALSE)
t <- active_vessel_2015 %>%
filter(eez == "China") %>%
mutate(date = lubridate::ymd(date)) %>%
group_by(year, date) %>%
summarise(active_vessels = sum(active_vessels)) %>%
ungroup() %>%
select(-year)
dygraphs::dygraph(xts::xts(t$active_vessels,t$date), main = "Active Chinese vessels inside their own EEZ") %>%
dygraphs::dyRangeSelector(dateWindow = c("2013-01-01", "2015-12-31")) %>%
dySeries(label = "Active vessels", color = "black") %>%
dyShading(from = "2015-02-18", to = "2015-02-24", color = "#CCEBD6") %>%
dyShading(from = "2014-01-31", to = "2014-02-6", color = "#CCEBD6") %>%
dyShading(from = "2013-02-10", to = "2013-02-15", color = "#CCEBD6") %>%
dyShading(from = "2015-05-16", to = "2015-08-01", color = "#FFE6E6") %>%
dyShading(from = "2014-05-16", to = "2014-08-01", color = "#FFE6E6") %>%
dyShading(from = "2013-05-16", to = "2013-08-01", color = "#FFE6E6") %>%
dyRoller(rollPeriod = 3)
t <- active_vessel_2015 %>%
filter(eez == "China") %>%
mutate(date = lubridate::ymd(date)) %>%
group_by(year, date) %>%
summarise(active_vessels = sum(active_vessels)) %>%
ungroup() %>%
select(-year)
dygraphs::dygraph(xts::xts(t$active_vessels,t$date), main = "Active Chinese vessels inside their own EEZ") %>%
dygraphs::dyRangeSelector(dateWindow = c("2013-01-01", "2015-12-31")) %>%
dySeries(label = "Active vessels", color = "black") %>%
dyShading(from = "2015-02-18", to = "2015-02-24", color = "#CCEBD6") %>%
dyShading(from = "2014-01-31", to = "2014-02-6", color = "#CCEBD6") %>%
dyShading(from = "2013-02-10", to = "2013-02-15", color = "#CCEBD6") %>%
dyShading(from = "2015-05-16", to = "2015-08-01", color = "#FFE6E6") %>%
dyShading(from = "2014-05-16", to = "2014-08-01", color = "#FFE6E6") %>%
dyShading(from = "2013-05-16", to = "2013-08-01", color = "#FFE6E6") %>%
dyRoller(rollPeriod = 3)
t <- active_vessel_2015 %>%
filter(eez == "Conflict zone China/Japan/Taiwan") %>%
mutate(date = lubridate::ymd(date)) %>%
group_by(year, date) %>%
summarise(active_vessels = sum(active_vessels)) %>%
ungroup() %>%
select(-year)
dygraphs::dygraph(xts::xts(t$active_vessels,t$date), main = "Active Chinese vessels in Conflict zone China/Japan/Taiwan") %>%
dygraphs::dyRangeSelector(dateWindow = c("2013-01-01", "2015-12-31")) %>%
dySeries(label = "Active vessels", color = "black") %>%
dyShading(from = "2015-02-18", to = "2015-02-24", color = "#CCEBD6") %>%
dyShading(from = "2014-01-31", to = "2014-02-6", color = "#CCEBD6") %>%
dyShading(from = "2013-02-10", to = "2013-02-15", color = "#CCEBD6") %>%
dyShading(from = "2015-05-16", to = "2015-08-01", color = "#FFE6E6") %>%
dyShading(from = "2014-05-16", to = "2014-08-01", color = "#FFE6E6") %>%
dyShading(from = "2013-05-16", to = "2013-08-01", color = "#FFE6E6")
t <- active_vessel_2015 %>%
filter(eez == "Conflict zone China/Japan/Taiwan") %>%
mutate(date = lubridate::ymd(date)) %>%
group_by(year, date) %>%
summarise(active_vessels = sum(active_vessels)) %>%
ungroup() %>%
select(-year)
dygraphs::dygraph(xts::xts(t$active_vessels,t$date), main = "Active Chinese vessels in Conflict zone China/Japan/Taiwan") %>%
dygraphs::dyRangeSelector(dateWindow = c("2013-01-01", "2015-12-31")) %>%
dySeries(label = "Active vessels", color = "black") %>%
dyShading(from = "2015-02-18", to = "2015-02-24", color = "#CCEBD6") %>%
dyShading(from = "2014-01-31", to = "2014-02-6", color = "#CCEBD6") %>%
dyShading(from = "2013-02-10", to = "2013-02-15", color = "#CCEBD6") %>%
dyShading(from = "2015-05-16", to = "2015-08-01", color = "#FFE6E6") %>%
dyShading(from = "2014-05-16", to = "2014-08-01", color = "#FFE6E6") %>%
dyShading(from = "2013-05-16", to = "2013-08-01", color = "#FFE6E6")
t <- active_vessel_2015 %>%
filter(eez == "South Korea") %>%
mutate(date = lubridate::ymd(date)) %>%
group_by(year, date) %>%
summarise(active_vessels = sum(active_vessels)) %>%
ungroup() %>%
select(-year)
dygraphs::dygraph(xts::xts(t$active_vessels,t$date), main = "Active Chinese vessels in South Korea EEZ") %>%
dygraphs::dyRangeSelector(dateWindow = c("2013-01-01", "2015-12-31")) %>%
dySeries(label = "Active vessels", color = "black") %>%
dyShading(from = "2015-02-18", to = "2015-02-24", color = "#CCEBD6") %>%
dyShading(from = "2014-01-31", to = "2014-02-6", color = "#CCEBD6") %>%
dyShading(from = "2013-02-10", to = "2013-02-15", color = "#CCEBD6") %>%
dyShading(from = "2015-05-16", to = "2015-08-01", color = "#FFE6E6") %>%
dyShading(from = "2014-05-16", to = "2014-08-01", color = "#FFE6E6") %>%
dyShading(from = "2013-05-16", to = "2013-08-01", color = "#FFE6E6")
t <- active_vessel_2015 %>%
filter(eez == "South Korea") %>%
mutate(date = lubridate::ymd(date)) %>%
group_by(year, date) %>%
summarise(active_vessels = sum(active_vessels)) %>%
ungroup() %>%
select(-year)
dygraphs::dygraph(xts::xts(t$active_vessels,t$date), main = "Active Chinese vessels in South Korea EEZ") %>%
dygraphs::dyRangeSelector(dateWindow = c("2013-01-01", "2015-12-31")) %>%
dySeries(label = "Active vessels", color = "black") %>%
dyShading(from = "2015-02-18", to = "2015-02-24", color = "#CCEBD6") %>%
dyShading(from = "2014-01-31", to = "2014-02-6", color = "#CCEBD6") %>%
dyShading(from = "2013-02-10", to = "2013-02-15", color = "#CCEBD6") %>%
dyShading(from = "2015-05-16", to = "2015-08-01", color = "#FFE6E6") %>%
dyShading(from = "2014-05-16", to = "2014-08-01", color = "#FFE6E6") %>%
dyShading(from = "2013-05-16", to = "2013-08-01", color = "#FFE6E6")
t <- active_vessel_2015 %>%
filter(is.na(eez)) %>%
mutate(date = lubridate::ymd(date)) %>%
group_by(year, date) %>%
summarise(active_vessels = sum(active_vessels)) %>%
ungroup() %>%
select(-year)
dygraphs::dygraph(xts::xts(t$active_vessels,t$date), main = "Active Chinese vessels in the high seas") %>%
dygraphs::dyRangeSelector(dateWindow = c("2013-01-01", "2015-12-31")) %>%
dySeries(label = "Active vessels", color = "black") %>%
dyShading(from = "2015-02-18", to = "2015-02-24", color = "#CCEBD6") %>%
dyShading(from = "2014-01-31", to = "2014-02-6", color = "#CCEBD6") %>%
dyShading(from = "2013-02-10", to = "2013-02-15", color = "#CCEBD6") %>%
dyShading(from = "2015-05-16", to = "2015-08-01", color = "#FFE6E6") %>%
dyShading(from = "2014-05-16", to = "2014-08-01", color = "#FFE6E6") %>%
dyShading(from = "2013-05-16", to = "2013-08-01", color = "#FFE6E6")
BQ_connection <-  dbConnect(dbi_driver(), dataset = "", project = "high-seas")
NOT_affected_vessels_2015 %>%
ggplot(aes(x = length)) +
geom_histogram(
aes(y = ..density..),
# Histogram with density instead of count on y-axis
binwidth = 5,
colour = "black",
fill = "white"
) +
geom_density(alpha = .2, fill = "lightblue") +
ggtitle('Size Distribution of unaffected vessels') +
theme_bw()
NOT_affected_vessels_2015 %>%
ggplot(aes(x = length)) +
geom_histogram(
aes(y = ..density..),
# Histogram with density instead of count on y-axis
binwidth = 5,
colour = "black",
fill = "white"
) +
geom_density(alpha = .2, fill = "lightblue") +
ggtitle('Size Distribution of unaffected vessels') +
theme_bw()
NOT_affected_vessels_2015 %>%
group_by(general_vessel_type) %>%
count() %>%
arrange(desc(n)) %>%
knitr::kable()
NOT_affected_vessels_2015 %>%
group_by(general_vessel_type) %>%
count() %>%
arrange(desc(n)) %>%
knitr::kable()
displaced_vessels_2015 <- affected_vessels_2015 %>%
filter(!mmsi %in% removed_vessels_2015$mmsi)
BQ_connection <-  dbConnect(dbi_driver(),dataset = "Juan", project = "ucsb-gfw")
if(dbExistsTable(BQ_connection, "chinese_moratorium_displaced_vessels_2015")){
dbRemoveTable(BQ_connection, "chinese_moratorium_displaced_vessels_2015")
dbWriteTable(BQ_connection, "chinese_moratorium_displaced_vessels_2015", displaced_vessels_2015)
} else {dbWriteTable(BQ_connection, "chinese_moratorium_displaced_vessels_2015", displaced_vessels_2015)}
effort_inside <- displaced_effort %>%
filter(eez == "China") %>%
mutate(date = lubridate::ymd(date)) %>%
group_by(year, date) %>%
summarise(fishing_hours = sum(fishing_hours)) %>%
ungroup() %>%
select(-year)
effort_inside <- xts::xts(effort_inside$fishing_hours,effort_inside$date)
effort_outside <- displaced_effort %>%
filter(!is.na(eez) & eez != "China") %>%
mutate(date = lubridate::ymd(date)) %>%
group_by(year, date) %>%
summarise(fishing_hours = sum(fishing_hours)) %>%
ungroup() %>%
select(-year)
effort_outside <- xts::xts(effort_outside$fishing_hours,effort_outside$date)
effort <- cbind(effort_outside,effort_inside)
dygraphs::dygraph(effort, main = "Fishing hours by the displaced fleet before, during, and after moratoria") %>%
dygraphs::dyRangeSelector(dateWindow = c("2015-01-01", "2015-12-31")) %>%
dySeries(name = "..1",label = "Effort in foreign EEZ", color = "blue") %>%
dySeries(name = "..2",label = "Effort inside EEZ", color = "black") %>%
dyShading(from = "2015-02-18", to = "2015-02-24", color = "#CCEBD6") %>%
dyShading(from = "2014-01-31", to = "2014-02-6", color = "#CCEBD6") %>%
dyShading(from = "2013-02-10", to = "2013-02-15", color = "#CCEBD6") %>%
dyShading(from = "2015-05-16", to = "2015-08-01", color = "#FFE6E6") %>%
dyShading(from = "2014-05-16", to = "2014-08-01", color = "#FFE6E6") %>%
dyShading(from = "2013-05-16", to = "2013-08-01", color = "#FFE6E6") %>%
dyLegend(width = 500) %>%
dyRoller(rollPeriod = 3)
effort_inside <- displaced_effort %>%
filter(eez == "China") %>%
mutate(date = lubridate::ymd(date)) %>%
group_by(year, date) %>%
summarise(fishing_hours = sum(fishing_hours)) %>%
ungroup() %>%
select(-year)
effort_inside <- xts::xts(effort_inside$fishing_hours,effort_inside$date)
effort_outside <- displaced_effort %>%
filter(!is.na(eez) & eez != "China") %>%
mutate(date = lubridate::ymd(date)) %>%
group_by(year, date) %>%
summarise(fishing_hours = sum(fishing_hours)) %>%
ungroup() %>%
select(-year)
effort_outside <- xts::xts(effort_outside$fishing_hours,effort_outside$date)
effort <- cbind(effort_outside,effort_inside)
dygraphs::dygraph(effort, main = "Fishing hours by the displaced fleet before, during, and after moratoria") %>%
dygraphs::dyRangeSelector(dateWindow = c("2015-01-01", "2015-12-31")) %>%
dySeries(name = "..1",label = "Effort in foreign EEZ", color = "blue") %>%
dySeries(name = "..2",label = "Effort inside EEZ", color = "black") %>%
dyShading(from = "2015-02-18", to = "2015-02-24", color = "#CCEBD6") %>%
dyShading(from = "2014-01-31", to = "2014-02-6", color = "#CCEBD6") %>%
dyShading(from = "2013-02-10", to = "2013-02-15", color = "#CCEBD6") %>%
dyShading(from = "2015-05-16", to = "2015-08-01", color = "#FFE6E6") %>%
dyShading(from = "2014-05-16", to = "2014-08-01", color = "#FFE6E6") %>%
dyShading(from = "2013-05-16", to = "2013-08-01", color = "#FFE6E6") %>%
dyLegend(width = 500) %>%
dyRoller(rollPeriod = 3)
BQ_connection <-  dbConnect(dbi_driver(),dataset = "", project = "high-seas")
ggmap::ggmap(ggmap::get_map(location = c(125,30,125,30), zoom = 5,  maptype = c("satellite"), source = 'google'))+
geom_point(data = removed_vessels_effort_2015,
aes(x=lon, y=lat, frame = dh), color="red", size = 1)
removed_vessels_effort_2015 <- removed_vessels_effort_2015 %>%
mutate(dh = round_date(timestamp, unit = "hours")) %>%
arrange(dh)
ggmap::ggmap(ggmap::get_map(location = c(125,30,125,30), zoom = 5,  maptype = c("satellite"), source = 'google'))+
geom_point(data = removed_vessels_effort_2015,
aes(x=lon, y=lat, frame = dh), color="red", size = 1)
ggmap::ggmap(ggmap::get_map(location = c(120,30,120,30), zoom = 5,  maptype = c("satellite"), source = 'google'))+
geom_point(data = removed_vessels_effort_2015,
aes(x=lon, y=lat, frame = dh), color="red", size = 1)
p <- ggmap::ggmap(ggmap::get_map(location = c(120,30,120,30), zoom = 5,  maptype = c("satellite"), source = 'google'))+
geom_point(data = removed_vessels_effort_2015,
aes(x=lon, y=lat, frame = dh), color="red", size = 1)
gganimate::gg_animate(p, interval = .2)
gganimate::gg_animate(p, interval = .2)
gganimate::gg_animate(p, interval = .2, "China.mp4")
>>>>>>> Stashed changes
=======
rename(country_name = Country) %>%
mutate(country_name = replace(country_name, country_name == "USA", "United States"),
country_name = replace(country_name, country_name == "China Main", "China"),
country_name = replace(country_name, country_name == "UK", "United Kingdom"),
country_name = replace(country_name, country_name == "Russian Fed", "Russia"),
country_name = replace(country_name, country_name == "Korea Rep", "South Korea"))
subsidies_by_country %>%
filter(Relative_subsidies <= 1.5) %>%
top_n(30, `Landed Value`) %>%
ggplot()+
geom_bar(aes(x = forcats::fct_reorder(country_name, Relative_subsidies), y = Relative_subsidies), stat = 'identity')+
coord_flip()
consistently_active_vessels <- consistently_active_vessels %>%
left_join(subsidies_by_country %>%
select(country_name, total_subsidies = Subsidies, relative_subsidies = Relative_subsidies))
subsidies_by_country %>%
anti_join(consistently_active_vessels) %>%
arrange(desc(Landings))
fits <- consistently_active_vessels %>%
filter(year!= 2012 & year != 2016 & !is.na(country_name) & !is.na(relative_subsidies)) %>%
group_by(country_name) %>%
do(fit = lm(hours ~ fuel_price , data = .))
plotly::ggplotly(consistently_active_vessels %>%
filter(year!= 2012 & year != 2016 & !is.na(country_name) & !is.na(relative_subsidies) & country_name != "Nicaragua") %>%
group_by(country_name) %>%
summarise(subsidies = mean(total_subsidies)) %>%
left_join(fits %>%
tidy(fit) %>%
filter(term == "fuel_price") %>%
select(country_name, slope = estimate)) %>%
ggplot()+
geom_point(aes(x = subsidies, y = slope, key = country_name)))
fits <- consistently_active_vessels %>%
filter(year!= 2012 & year != 2016 & !is.na(country_name) & !is.na(relative_subsidies)) %>%
group_by(country_name) %>%
do(fit = lm(distance ~ fuel_price , data = .))
plotly::ggplotly(consistently_active_vessels %>%
filter(year!= 2012 & year != 2016 & !is.na(country_name) & !is.na(relative_subsidies) & country_name != "Nicaragua") %>%
group_by(country_name) %>%
summarise(subsidies = mean(total_subsidies)) %>%
left_join(fits %>%
tidy(fit) %>%
filter(term == "fuel_price") %>%
select(country_name, slope = estimate)) %>%
ggplot()+
geom_point(aes(x = subsidies, y = slope, key = country_name)))
fits <- consistently_active_vessels %>%
filter(year!= 2012 & year != 2016 & !is.na(country_name) & !is.na(relative_subsidies)) %>%
group_by(country_name) %>%
do(fit = lm(distancehours ~ fuel_price , data = .))
plotly::ggplotly(consistently_active_vessels %>%
filter(year!= 2012 & year != 2016 & !is.na(country_name) & !is.na(relative_subsidies) & country_name != "Nicaragua") %>%
group_by(country_name) %>%
summarise(subsidies = mean(total_subsidies)) %>%
left_join(fits %>%
tidy(fit) %>%
filter(term == "fuel_price") %>%
select(country_name, slope = estimate)) %>%
ggplot()+
geom_point(aes(x = subsidies, y = slope, key = country_name)))
plotly::ggplotly(consistently_active_vessels %>%
filter(year!= 2012 & year != 2016 & !is.na(country_name) & !is.na(relative_subsidies) & country_name != "Nicaragua") %>%
group_by(country_name) %>%
summarise(subsidies = mean(relative_subsidies)) %>%
left_join(fits %>%
tidy(fit) %>%
filter(term == "fuel_price") %>%
select(country_name, slope = estimate)) %>%
ggplot()+
geom_point(aes(x = subsidies, y = slope, key = country_name)))
plotly::ggplotly(consistently_active_vessels %>%
filter(year!= 2012 & year != 2016 & !is.na(country_name) & !is.na(relative_subsidies) & country_name != "Nicaragua") %>%
group_by(country_name) %>%
summarise(subsidies = mean(total_subsidies)) %>%
left_join(fits %>%
tidy(fit) %>%
filter(term == "fuel_price") %>%
select(country_name, slope = estimate)) %>%
ggplot()+
geom_point(aes(x = subsidies, y = slope, key = country_name)))
plotly::ggplotly(consistently_active_vessels %>%
filter(year!= 2012 & year != 2016 & !is.na(country_name) & !is.na(relative_subsidies) & country_name != "Nicaragua") %>%
group_by(country_name) %>%
summarise(subsidies = mean(total_subsidies)) %>%
left_join(fits %>%
tidy(fit) %>%
filter(term == "fuel_price") %>%
select(country_name, slope = estimate)) %>%
ggplot()+
geom_point(aes(x = subsidies, y = slope, key = country_name))) %>%
geom_point(aes(x = subsidies, y = slope, key = country_name), data = . %>% filter(country_name == "Argentina"))
consistently_active_vessels %>%
filter(year!= 2012 & year != 2016 & !is.na(country_name) & !is.na(relative_subsidies) & country_name != "Nicaragua") %>%
group_by(country_name) %>%
summarise(subsidies = mean(total_subsidies)) %>%
left_join(fits %>%
tidy(fit) %>%
filter(term == "fuel_price") %>%
select(country_name, slope = estimate)) %>%
ggplot()+
geom_point(aes(x = subsidies, y = slope, key = country_name))+
geom_point(aes(x = subsidies, y = slope, key = country_name), data = . %>% filter(country_name == "Argentina"))
consistently_active_vessels %>%
filter(year!= 2012 & year != 2016 & !is.na(country_name) & !is.na(relative_subsidies) & country_name != "Nicaragua") %>%
group_by(country_name) %>%
summarise(subsidies = mean(total_subsidies)) %>%
left_join(fits %>%
tidy(fit) %>%
filter(term == "fuel_price") %>%
select(country_name, slope = estimate)) %>%
ggplot()+
geom_point(aes(x = subsidies, y = slope, key = country_name))+
geom_point(aes(x = subsidies, y = slope, key = country_name),color = 'red', data = . %>% filter(country_name == "Argentina"))
fits <- consistently_active_vessels %>%
filter(year!= 2012 & year != 2016 & !is.na(country_name) & !is.na(relative_subsidies)) %>%
group_by(country_name) %>%
do(fit = lm(hours ~ fuel_price , data = .))
plotly::ggplotly(consistently_active_vessels %>%
filter(year!= 2012 & year != 2016 & !is.na(country_name) & !is.na(relative_subsidies) & country_name != "Nicaragua") %>%
group_by(country_name) %>%
summarise(subsidies = mean(total_subsidies)) %>%
left_join(fits %>%
tidy(fit) %>%
filter(term == "fuel_price") %>%
select(country_name, slope = estimate)) %>%
ggplot()+
geom_point(aes(x = subsidies, y = slope, key = country_name))+
geom_point(aes(x = subsidies, y = slope, key = country_name),color = 'red', data = . %>% filter(country_name == "Argentina")))
plotly::ggplotly(
consistently_active_vessels %>%
filter(year != 2016 & year != 2012) %>%
group_by(year, country_name) %>%
#filter(country_name %in% c("China", "Spain", "Taiwan", "Japan", "France", "United States", "South Korea", "Norway","Iceland", "Argentina")) %>%
summarize(distance_traveled = sum(distance, na.rm = TRUE),
fuel_price = mean(fuel_price),
vessels = n_distinct(mmsi)) %>%
ggplot()+
geom_line(aes(x= fuel_price, y = distance_traveled, color = country_name, group = country_name, key = country_name))+
guides(color = FALSE, group = FALSE)+
theme_minimal())
plotly::ggplotly(
consistently_active_vessels %>%
filter(year != 2016 & year != 2012) %>%
group_by(year, country_name) %>%
#filter(country_name %in% c("China", "Spain", "Taiwan", "Japan", "France", "United States", "South Korea", "Norway","Iceland", "Argentina")) %>%
summarize(hours = sum(hours, na.rm = TRUE),
fuel_price = mean(fuel_price),
vessels = n_distinct(mmsi)) %>%
ggplot()+
geom_line(aes(x= fuel_price, y = hours, color = country_name, group = country_name, key = country_name))+
guides(color = FALSE, group = FALSE)+
theme_minimal())
plotly::ggplotly(
consistently_active_vessels %>%
filter(year != 2016 & year != 2012) %>%
group_by(year, country_name) %>%
#filter(country_name %in% c("China", "Spain", "Taiwan", "Japan", "France", "United States", "South Korea", "Norway","Iceland", "Argentina")) %>%
summarize(distance_hours = sum(distancehours, na.rm = TRUE),
fuel_price = mean(fuel_price),
vessels = n_distinct(mmsi)) %>%
ggplot()+
geom_line(aes(x= fuel_price, y = distance_hours, color = country_name, group = country_name, key = country_name))+
guides(color = FALSE, group = FALSE)+
theme_minimal())
fits <- consistently_active_vessels %>%
filter(year!= 2012 & year != 2016 & !is.na(country_name) & !is.na(relative_subsidies)) %>%
group_by(country_name) %>%
do(fit = lm(distance ~ fuel_price , data = .))
plotly::ggplotly(consistently_active_vessels %>%
filter(year!= 2012 & year != 2016 & !is.na(country_name) & !is.na(relative_subsidies) & country_name != "Nicaragua") %>%
group_by(country_name) %>%
summarise(subsidies = mean(total_subsidies)) %>%
left_join(fits %>%
tidy(fit) %>%
filter(term == "fuel_price") %>%
select(country_name, slope = estimate)) %>%
ggplot()+
geom_point(aes(x = subsidies, y = slope, key = country_name))+
geom_point(aes(x = subsidies, y = slope, key = country_name),color = 'red', data = . %>% filter(country_name == "Argentina")))
fits <- consistently_active_vessels %>%
filter(year!= 2012 & year != 2016 & !is.na(country_name) & !is.na(relative_subsidies)) %>%
group_by(country_name) %>%
do(fit = lm(hours ~ fuel_price , data = .))
plotly::ggplotly(consistently_active_vessels %>%
filter(year!= 2012 & year != 2016 & !is.na(country_name) & !is.na(relative_subsidies) & country_name != "Nicaragua") %>%
group_by(country_name) %>%
summarise(subsidies = mean(total_subsidies)) %>%
left_join(fits %>%
tidy(fit) %>%
filter(term == "fuel_price") %>%
select(country_name, slope = estimate)) %>%
ggplot()+
geom_point(aes(x = subsidies, y = slope, key = country_name))+
geom_point(aes(x = subsidies, y = slope, key = country_name),color = 'red', data = . %>% filter(country_name == "Argentina")))
>>>>>>> c08675c3f5eb2b6241db03a43ac20ca7f373bb3e
=======
>>>>>>> Juan
